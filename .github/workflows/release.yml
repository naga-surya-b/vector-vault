name: release
on:
  push:
    tags: ["v*"]
  workflow_dispatch: {}

jobs:
  build-exe:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      # Build frontend first so frontend/dist exists for packaging
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Build frontend
        run: |
          cd frontend
          npm ci
          npm run build

      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - name: Install Python deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build EXE (PyInstaller)
        shell: cmd
        run: |
          pyinstaller --onefile -n VectorVault ^
            --collect-all sentence_transformers ^
            --collect-all transformers ^
            --add-data "app\frontend\dist;app\frontend\dist" ^
            --add-data "app;app" app\start.py

      - name: Upload EXE artifact
        uses: actions/upload-artifact@v4
        with:
          name: VectorVault.exe
          path: dist/VectorVault.exe

  build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Build frontend so Docker COPY frontend/dist works
      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - name: Build frontend
        run: |
          cd frontend
          npm ci
          npm run build

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: yourname/vectorvault-pro:latest
